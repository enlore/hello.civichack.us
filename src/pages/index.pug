extends ../_layout
block body
  header
    .wrap.u-centerMargin(style="max-width: 600px;")
      h1.f-tc Hello.#[span.f-fade civichack.us]

      h2.f-tc.
        Five minute, topical interviews with experienced brigade membership
        about trials, tribulations, tips, tricks, and first hand experience
        trying to make this whole Code for America thing work.

      p.f-tc.
        Let's collect some institutional knowledge.

      p.f-tc.
        Take a look at 
        #[a(href="https://docs.google.com/document/d/1THGqCtxPRxojFgQqFKnUimk3HBcRFzVXs2w3RwEJy9I/edit#heading=h.5hfznm5o3agj", target="_blank") the topic idea document]
        for more interview topic ideas and to volunteer to be interviewed. 

      p.f-tc.
        Site code hosted #[a(href="https://github.com/enlore/hello.civichack.us", target="_blank") on GitHub].
        If you want to submit a video link, take a look at the source and
        create a pull request. I'll streamline the contributing process later.
        If you aren't comfortable making a pull request, just shoot me an
        email.

      p.f-tc.
        Email me at #[a(href="mailto:nick@codefornashville.org") nick@codefornashville.org]
        with any questions or comments.

  section.vids
    #vids-mount
      .control-group.u-centerMargin(style="max-width: 800px;")
        label.f-fade.u-mb4 Search and filter
        input.searchInput(type="search", v-model="searchTerm")

      viddy(
        v-show="filteredVids.length > 0",
        v-for="video in filteredVids",
        :key="video.src",
        :src="video.src",
        :notes="video.notes",
        :tags="video.tags",
        @tagclick="searchTerm = $event"
      )

      p.f-tc(v-show="!filteredVids.length > 0").
        Hey, no results for #[span.msg.msg-noResults {{ this.searchTerm }}].
        Try #[span.msg.msg-tagLink(@click="searchTerm = randomTag") {{ randomTag }} ]

    script.
      var Vid = {
        data: function () { return {} },

        props: [
          'src',
          'tags',
          'notes'
        ],

        template:
          '<div class="vid">'
        +   '<iframe class="vid-frame" :src="src" frameborder="0"></iframe>'
        +   '<h4 v-if="notes" class="vid-notesLabel"> Notes </h4>'
        +   '<p v-if="notes" class="vid-notes" v-html="notes"></p>'
        +   '<div class="vid-tags">'
          +   '<span class="vid-tag" v-for="tag in tags" @click="$emit(\'tagclick\', tag)"> {{ tag }} </span>'
        +   '</div>'
        + '</div>'
      }

      new Vue({
        el: "#vids-mount",

        components: {
          'viddy': Vid
        },

        data: {
          searchTerm: "",
          videos: [
              {
                  src: "https://www.youtube.com/embed/0AHVdETLJlA?rel=0&html5=true",
                  interviewer: "",
                  interviewee: "",
                  tags: ["new leadership", "returning brigade", "leadership"]
              },
              {
                  src: "https://www.youtube.com/embed/1Yj-6tIeQXA?rel=0",
                  interviewer: "",
                  interviewee: "",
                  tags: ["experienced brigade", "many captains", "events", "leadership"]
              },
              {
                  src: "https://www.youtube.com/embed/FkEZvp0cjgc?rel=0",
                  interviewer: "",
                  interviewee: "",
                  tags: ["design", "theory", "civics"],
                  notes: "Here’s the first essay I wrote for CfA, about what became my current full-time pursuit: http://beyondtransparency.org/chapters/part-5/towards-a-community-data-commons/ here’s a piece i wrote about civics and a counterpoint to ‘gov as platform’ in Civic Quarterly: https://www.civicquarterly.com/article/with-and-of-and-by-and-for/ i recommend Emergent Strategy to anyone interested in organizing: https://www.akpress.org/emergentstrategy.html"
              },
          ]
        },

        computed: {
          allTags: function () {
            return this.videos.reduce(function (acc, vid) {
              return acc.concat(vid.tags)
            }, [])
          },

          randomTag: function () {
            // confident that allTags will always have a length prop
            var tags = this.allTags
            var idx = Math.floor(Math.random() * tags.length)
            return tags[idx]
          },

          filteredVids: function () {
            return (this.searchTerm === "")
              ? this.videos
              : this.searchEngine.search(this.searchTerm)
          }
        },

        methods:{
          wrapUrls: function (video) {
            if (video.notes) {
              video.notes = video.notes.replace(
                // match urls that are entered with protocol intact
                // mostly for fun, i guess
                /(https?:\/\/[\w\b\.\/\-\?=]*)/ig,
                '<a class="vid-href" target="_blank" href="$1">[link]</a>'
              )
            }

            return video
          }
        },

        created: function () {
          this.searchEngine = new window.Fuse(this.videos, {
            shouldSort: true,
            keys: ['tags', 'notes']
          })

          this.videos = this.videos.map(this.wrapUrls)
        }
      })

  
